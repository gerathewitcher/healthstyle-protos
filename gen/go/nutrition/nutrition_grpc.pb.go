// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.12.4
// source: nutrition/nutrition.proto

package nutrition_v1

import (
	context "context"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// NutritionV1Client is the client API for NutritionV1 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type NutritionV1Client interface {
	CreateNutritionPlan(ctx context.Context, in *CreateNutritionPlanRequest, opts ...grpc.CallOption) (*CreateNutritionPlanResponse, error)
	CreateMeal(ctx context.Context, in *CreateMealRequest, opts ...grpc.CallOption) (*CreateMealResponse, error)
	CreateMealFood(ctx context.Context, in *CreateMealFoodRequest, opts ...grpc.CallOption) (*CreateMealFoodResponse, error)
	GetFood(ctx context.Context, in *GetFoodRequest, opts ...grpc.CallOption) (*GetFoodResponse, error)
	GetFoods(ctx context.Context, in *GetFoodsRequest, opts ...grpc.CallOption) (*GetFoodsResponse, error)
	CreateFood(ctx context.Context, in *CreateFoodRequest, opts ...grpc.CallOption) (*CreateFoodResponse, error)
	UpdateFood(ctx context.Context, in *UpdateFoodRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetNutritionPlan(ctx context.Context, in *GetNutritionPlanRequest, opts ...grpc.CallOption) (*GetNutritionPlanResponse, error)
	GetNutritionPlans(ctx context.Context, in *GetNutritionPlansRequest, opts ...grpc.CallOption) (*GetNutritionPlansResponse, error)
}

type nutritionV1Client struct {
	cc grpc.ClientConnInterface
}

func NewNutritionV1Client(cc grpc.ClientConnInterface) NutritionV1Client {
	return &nutritionV1Client{cc}
}

func (c *nutritionV1Client) CreateNutritionPlan(ctx context.Context, in *CreateNutritionPlanRequest, opts ...grpc.CallOption) (*CreateNutritionPlanResponse, error) {
	out := new(CreateNutritionPlanResponse)
	err := c.cc.Invoke(ctx, "/nutrition_v1.NutritionV1/CreateNutritionPlan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nutritionV1Client) CreateMeal(ctx context.Context, in *CreateMealRequest, opts ...grpc.CallOption) (*CreateMealResponse, error) {
	out := new(CreateMealResponse)
	err := c.cc.Invoke(ctx, "/nutrition_v1.NutritionV1/CreateMeal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nutritionV1Client) CreateMealFood(ctx context.Context, in *CreateMealFoodRequest, opts ...grpc.CallOption) (*CreateMealFoodResponse, error) {
	out := new(CreateMealFoodResponse)
	err := c.cc.Invoke(ctx, "/nutrition_v1.NutritionV1/CreateMealFood", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nutritionV1Client) GetFood(ctx context.Context, in *GetFoodRequest, opts ...grpc.CallOption) (*GetFoodResponse, error) {
	out := new(GetFoodResponse)
	err := c.cc.Invoke(ctx, "/nutrition_v1.NutritionV1/GetFood", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nutritionV1Client) GetFoods(ctx context.Context, in *GetFoodsRequest, opts ...grpc.CallOption) (*GetFoodsResponse, error) {
	out := new(GetFoodsResponse)
	err := c.cc.Invoke(ctx, "/nutrition_v1.NutritionV1/GetFoods", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nutritionV1Client) CreateFood(ctx context.Context, in *CreateFoodRequest, opts ...grpc.CallOption) (*CreateFoodResponse, error) {
	out := new(CreateFoodResponse)
	err := c.cc.Invoke(ctx, "/nutrition_v1.NutritionV1/CreateFood", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nutritionV1Client) UpdateFood(ctx context.Context, in *UpdateFoodRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/nutrition_v1.NutritionV1/UpdateFood", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nutritionV1Client) GetNutritionPlan(ctx context.Context, in *GetNutritionPlanRequest, opts ...grpc.CallOption) (*GetNutritionPlanResponse, error) {
	out := new(GetNutritionPlanResponse)
	err := c.cc.Invoke(ctx, "/nutrition_v1.NutritionV1/GetNutritionPlan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nutritionV1Client) GetNutritionPlans(ctx context.Context, in *GetNutritionPlansRequest, opts ...grpc.CallOption) (*GetNutritionPlansResponse, error) {
	out := new(GetNutritionPlansResponse)
	err := c.cc.Invoke(ctx, "/nutrition_v1.NutritionV1/GetNutritionPlans", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NutritionV1Server is the server API for NutritionV1 service.
// All implementations must embed UnimplementedNutritionV1Server
// for forward compatibility
type NutritionV1Server interface {
	CreateNutritionPlan(context.Context, *CreateNutritionPlanRequest) (*CreateNutritionPlanResponse, error)
	CreateMeal(context.Context, *CreateMealRequest) (*CreateMealResponse, error)
	CreateMealFood(context.Context, *CreateMealFoodRequest) (*CreateMealFoodResponse, error)
	GetFood(context.Context, *GetFoodRequest) (*GetFoodResponse, error)
	GetFoods(context.Context, *GetFoodsRequest) (*GetFoodsResponse, error)
	CreateFood(context.Context, *CreateFoodRequest) (*CreateFoodResponse, error)
	UpdateFood(context.Context, *UpdateFoodRequest) (*empty.Empty, error)
	GetNutritionPlan(context.Context, *GetNutritionPlanRequest) (*GetNutritionPlanResponse, error)
	GetNutritionPlans(context.Context, *GetNutritionPlansRequest) (*GetNutritionPlansResponse, error)
	mustEmbedUnimplementedNutritionV1Server()
}

// UnimplementedNutritionV1Server must be embedded to have forward compatible implementations.
type UnimplementedNutritionV1Server struct {
}

func (UnimplementedNutritionV1Server) CreateNutritionPlan(context.Context, *CreateNutritionPlanRequest) (*CreateNutritionPlanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateNutritionPlan not implemented")
}
func (UnimplementedNutritionV1Server) CreateMeal(context.Context, *CreateMealRequest) (*CreateMealResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMeal not implemented")
}
func (UnimplementedNutritionV1Server) CreateMealFood(context.Context, *CreateMealFoodRequest) (*CreateMealFoodResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMealFood not implemented")
}
func (UnimplementedNutritionV1Server) GetFood(context.Context, *GetFoodRequest) (*GetFoodResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFood not implemented")
}
func (UnimplementedNutritionV1Server) GetFoods(context.Context, *GetFoodsRequest) (*GetFoodsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFoods not implemented")
}
func (UnimplementedNutritionV1Server) CreateFood(context.Context, *CreateFoodRequest) (*CreateFoodResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFood not implemented")
}
func (UnimplementedNutritionV1Server) UpdateFood(context.Context, *UpdateFoodRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFood not implemented")
}
func (UnimplementedNutritionV1Server) GetNutritionPlan(context.Context, *GetNutritionPlanRequest) (*GetNutritionPlanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNutritionPlan not implemented")
}
func (UnimplementedNutritionV1Server) GetNutritionPlans(context.Context, *GetNutritionPlansRequest) (*GetNutritionPlansResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNutritionPlans not implemented")
}
func (UnimplementedNutritionV1Server) mustEmbedUnimplementedNutritionV1Server() {}

// UnsafeNutritionV1Server may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to NutritionV1Server will
// result in compilation errors.
type UnsafeNutritionV1Server interface {
	mustEmbedUnimplementedNutritionV1Server()
}

func RegisterNutritionV1Server(s grpc.ServiceRegistrar, srv NutritionV1Server) {
	s.RegisterService(&NutritionV1_ServiceDesc, srv)
}

func _NutritionV1_CreateNutritionPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateNutritionPlanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NutritionV1Server).CreateNutritionPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nutrition_v1.NutritionV1/CreateNutritionPlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NutritionV1Server).CreateNutritionPlan(ctx, req.(*CreateNutritionPlanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NutritionV1_CreateMeal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMealRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NutritionV1Server).CreateMeal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nutrition_v1.NutritionV1/CreateMeal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NutritionV1Server).CreateMeal(ctx, req.(*CreateMealRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NutritionV1_CreateMealFood_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMealFoodRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NutritionV1Server).CreateMealFood(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nutrition_v1.NutritionV1/CreateMealFood",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NutritionV1Server).CreateMealFood(ctx, req.(*CreateMealFoodRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NutritionV1_GetFood_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFoodRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NutritionV1Server).GetFood(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nutrition_v1.NutritionV1/GetFood",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NutritionV1Server).GetFood(ctx, req.(*GetFoodRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NutritionV1_GetFoods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFoodsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NutritionV1Server).GetFoods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nutrition_v1.NutritionV1/GetFoods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NutritionV1Server).GetFoods(ctx, req.(*GetFoodsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NutritionV1_CreateFood_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateFoodRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NutritionV1Server).CreateFood(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nutrition_v1.NutritionV1/CreateFood",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NutritionV1Server).CreateFood(ctx, req.(*CreateFoodRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NutritionV1_UpdateFood_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFoodRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NutritionV1Server).UpdateFood(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nutrition_v1.NutritionV1/UpdateFood",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NutritionV1Server).UpdateFood(ctx, req.(*UpdateFoodRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NutritionV1_GetNutritionPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNutritionPlanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NutritionV1Server).GetNutritionPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nutrition_v1.NutritionV1/GetNutritionPlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NutritionV1Server).GetNutritionPlan(ctx, req.(*GetNutritionPlanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NutritionV1_GetNutritionPlans_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNutritionPlansRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NutritionV1Server).GetNutritionPlans(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nutrition_v1.NutritionV1/GetNutritionPlans",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NutritionV1Server).GetNutritionPlans(ctx, req.(*GetNutritionPlansRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// NutritionV1_ServiceDesc is the grpc.ServiceDesc for NutritionV1 service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var NutritionV1_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "nutrition_v1.NutritionV1",
	HandlerType: (*NutritionV1Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateNutritionPlan",
			Handler:    _NutritionV1_CreateNutritionPlan_Handler,
		},
		{
			MethodName: "CreateMeal",
			Handler:    _NutritionV1_CreateMeal_Handler,
		},
		{
			MethodName: "CreateMealFood",
			Handler:    _NutritionV1_CreateMealFood_Handler,
		},
		{
			MethodName: "GetFood",
			Handler:    _NutritionV1_GetFood_Handler,
		},
		{
			MethodName: "GetFoods",
			Handler:    _NutritionV1_GetFoods_Handler,
		},
		{
			MethodName: "CreateFood",
			Handler:    _NutritionV1_CreateFood_Handler,
		},
		{
			MethodName: "UpdateFood",
			Handler:    _NutritionV1_UpdateFood_Handler,
		},
		{
			MethodName: "GetNutritionPlan",
			Handler:    _NutritionV1_GetNutritionPlan_Handler,
		},
		{
			MethodName: "GetNutritionPlans",
			Handler:    _NutritionV1_GetNutritionPlans_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nutrition/nutrition.proto",
}
